FROM --platform=linux/amd64 node:18-alpine as build

WORKDIR /app

# Copy package.json and package-lock.json (if it exists) for better caching
COPY frontend/package*.json ./
RUN npm ci --quiet

# Copy frontend source code (excluding node_modules which is handled by .dockerignore)
COPY frontend/ ./

# Build the React application with production optimization
RUN npm run build

# Production stage with lightweight web server
FROM --platform=linux/amd64 nginx:alpine

# Copy built files from build stage
COPY --from=build /app/dist /usr/share/nginx/html

# Copy nginx configuration
COPY frontend/nginx.conf /etc/nginx/conf.d/default.conf

# Expose port for the frontend service
EXPOSE 80

# Start nginx server
CMD ["nginx", "-g", "daemon off;"] 