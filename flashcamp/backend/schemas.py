from __future__ import annotations
from typing import List, Optional, Any, Dict
# AUTO-GENERATED by generators/build_schema.py — DO NOT EDIT
# Generated on: 2025-05-17T05:11:45.037816Z
# Source: /Users/sf/Desktop/FLASH/flashcamp/contracts/metrics.json
# Spec Checksum: 38b1caae
from decimal import Decimal
from pydantic import BaseModel, Field, model_validator

class MetricsInput(BaseModel):

    """Input model for startup metrics analysis"""

    startup_name: str = Field(None, description="The official name of the startup being analyzed.")
    startup_id: str = Field(None, description="Unique identifier for the startup.")
    sector: str = Field(None, description="The primary industry sector in which the startup operates.")
    subsector: str = Field(None, description="A more specific industry category within the main sector.")
    market_geography: Optional[List[str]] = Field(None, description="The geographic regions or countries the startup targets or serves.")
    country: str = Field(None, description="The country where the startup is headquartered or primarily operates.")
    website: str = Field(None, description="The official website URL for the startup.")
    founding_year: Optional[float] = Field(None, description="The year the startup was founded.")
    funding_stage: str = Field(None, description="Current stage of funding (e.g., Seed, Series A, Series B, etc.).")
    total_capital_raised_usd: Optional[float] = Field(None, description="Total amount of capital raised by the startup to date, in USD.")
    funding_rounds_count: Optional[float] = Field(None, description="Total number of funding rounds completed by the startup.")
    round_valuation_usd: Optional[float] = Field(None, description="The valuation of the startup in its most recent funding round.")
    post_money_valuation_usd: Optional[float] = Field(None, description="The valuation of the startup after the most recent funding round.")
    committed_funding_usd: Optional[float] = Field(None, description="Funding that has been committed but not yet received.")
    cash_on_hand_usd: Optional[float] = Field(None, description="The amount of cash and cash equivalents currently held by the startup.")
    monthly_burn_usd: Optional[float] = Field(None, description="The amount of cash the startup spends per month.")
    burn_stddev_usd: Optional[float] = Field(None, description="Standard deviation of monthly burn, indicating volatility in cash outflows.")
    annual_revenue_run_rate: Optional[float] = Field(None, description="Projected annual revenue based on current monthly or quarterly figures.")
    revenue_growth_rate_percent: Optional[float] = Field(None, description="The percentage rate at which the startup's revenue is increasing.")
    ltv_cac_ratio: Optional[float] = Field(None, description="The ratio of customer Lifetime Value (LTV) to Customer Acquisition Cost (CAC), indicating unit economics.")
    cac_usd: Optional[float] = Field(None, description="Customer Acquisition Cost — the average cost to acquire a new customer.")
    gross_margin_percent: Optional[float] = Field(None, description="Gross profit as a percentage of revenue, reflecting core business efficiency.")
    customer_churn_rate_percent: Optional[float] = Field(None, description="Percentage of customers lost over a specific period. High churn can signal product or market issues.")
    has_debt: Optional[bool] = Field(None, description="Indicates whether the startup currently has any outstanding debt obligations.")
    investor_tier_primary: str = Field(None, description="The quality tier or level of the startup's main investors.")
    customer_concentration_percent: Optional[float] = Field(None, description="The percentage of revenue coming from the largest customer(s). High concentration can indicate risk.")
    patent_count: Optional[float] = Field(None, description="The number of patents granted or pending that are owned by the startup.")
    network_effects_present: Optional[bool] = Field(None, description="Indicates whether the product or service benefits from network effects (i.e., becomes more valuable as more people use it).")
    has_data_moat: Optional[bool] = Field(None, description="Indicates if the startup has proprietary data that creates a defensible competitive advantage.")
    regulatory_advantage_present: Optional[bool] = Field(None, description="Indicates if the startup benefits from favorable regulatory conditions or barriers.")
    scalability_score: Optional[float] = Field(None, description="A score reflecting the startup's ability to scale operations efficiently.")
    tech_differentiation_score: Optional[float] = Field(None, description="A score reflecting how unique and defensible the startup's technology is compared to competitors.")
    switching_cost_score: Optional[float] = Field(None, description="A score reflecting how difficult it is for customers to switch to a competitor's product or service.")
    brand_strength_score: Optional[float] = Field(None, description="A score indicating the perceived strength and recognition of the startup's brand.")
    product_stage: str = Field(None, description="The current development stage of the product (e.g., MVP, Beta, Launched).")
    customer_count: Optional[float] = Field(None, description="The total number of paying customers.")
    net_dollar_retention_percent: Optional[float] = Field(None, description="The percentage of revenue retained from existing customers over a period, including expansion revenue.")
    mau: Optional[float] = Field(None, description="The total number of unique users who engage with the product or service in a given month.")
    product_retention_30d: Optional[float] = Field(None, description="The percentage of users who remain active 30 days after signup.")
    nps_score: Optional[float] = Field(None, description="Net Promoter Score (NPS) is a customer loyalty and satisfaction measurement.")
    tam_size_usd: Optional[float] = Field(None, description="Total Addressable Market size, representing the maximum revenue opportunity in USD.")
    sam_size_usd: Optional[float] = Field(None, description="Serviceable Available Market size, representing the portion of TAM targeted by the startup's products/services.")
    tam_justification: str = Field(None, description="Explanation or evidence supporting the TAM estimate.")
    claimed_cagr_pct: Optional[float] = Field(None, description="Compound Annual Growth Rate claimed by the startup for their market.")
    market_growth_rate_percent: Optional[float] = Field(None, description="Annual growth rate of the startup's target market, expressed as a percentage.")
    user_growth_rate_percent: Optional[float] = Field(None, description="The rate at which the user base is growing, expressed as a percentage.")
    product_retention_90d: Optional[float] = Field(None, description="The percentage of users who remain active 90 days after signup.")
    top3_competitor_share_pct: Optional[float] = Field(None, description="Percentage of market share held by the top three competitors.")
    competition_intensity: Optional[float] = Field(None, description="A measure of how many competitors are in the space and the intensity of competition the startup faces.")
    competitors_named_count: Optional[float] = Field(None, description="Number of direct competitors identified by name.")
    industry_regulation_level: str = Field(None, description="The degree of regulatory oversight in the startup's industry.")
    regulation_flags_json: str = Field(None, description="Key regulatory requirements or risks relevant to the startup's market in JSON format.")
    countries_served_json: str = Field(None, description="Countries where the startup operates or serves customers in JSON format.")
    conversion_rate_percent: Optional[float] = Field(None, description="Percentage of leads or users that convert to paying customers.")
    founders_count: Optional[float] = Field(None, description="Total number of founders in the startup.")
    team_size_total: Optional[float] = Field(None, description="Total number of employees (full-time and part-time) at the startup.")
    team_size_full_time: Optional[float] = Field(None, description="Number of full-time employees at the startup.")
    founder_domain_experience_years: Optional[float] = Field(None, description="Years of relevant industry/domain experience held by the founders.")
    prior_startup_experience_count: Optional[float] = Field(None, description="Number of previous startups founded by the current founding team.")
    prior_successful_exits_count: Optional[float] = Field(None, description="Number of successful startup exits (acquisitions or IPOs) achieved by the founding team.")
    board_advisor_experience_score: Optional[float] = Field(None, description="A quantitative assessment of the experience and value-add of the startup's board and advisors.")
    advisors_count: Optional[float] = Field(None, description="Number of formal advisors to the startup.")
    team_diversity_percent: Optional[float] = Field(None, description="Percentage of team members from diverse backgrounds (gender, ethnicity, etc.).")
    gender_diversity_index: Optional[float] = Field(None, description="A composite index measuring gender diversity within the team (e.g., 0 = no diversity, 1 = fully balanced).")
    linkedin_connections_total: Optional[float] = Field(None, description="Total number of LinkedIn connections among the founding team, indicating professional network reach.")
    twitter_followers_total: Optional[float] = Field(None, description="Total number of Twitter followers for the startup or founders, indicating social media influence.")
    key_person_dependency: Optional[float] = Field(None, description="A measure of how dependent the business is on a single key individual (founder, CTO, etc.). High dependency is a risk.")
    geography_diversity_index: Optional[float] = Field(None, description="A composite index measuring the geographic diversity of the team.")
    success_label: str = Field(None, description="Indicates whether the startup was successful or not (for training data).")


class RunwaySimInput(BaseModel):
    startup_id: Optional[str] = None
    total_funding_usd: Optional[Decimal] = Field(None, ge=0)
    monthly_burn_usd: Decimal = Field(..., ge=0) # Burn rate is required
    cash_on_hand_usd: Decimal = Field(..., ge=0) # Cash on hand is required

    model_config = {"extra": "ignore"}

class Alert(BaseModel):
    """Alert model for warnings and notifications"""
    type: str  # "error", "warning", "info"
    pillar: str  # "capital", "advantage", "market", "people", "balance"
    message: str

class AnalysisResult(BaseModel):
    """Results from startup analysis"""
    startup_id: str
    startup_name: str
    capital_score: float
    advantage_score: float
    market_score: float
    people_score: float
    overall_score: float
    success_probability: float
    alerts: List[Dict[str, str]] = []

    class Config:
        schema_extra = {
            "example": {
                "startup_id": "12345",
                "startup_name": "Example Startup",
                "capital_score": 0.75,
                "advantage_score": 0.68,
                "market_score": 0.82,
                "people_score": 0.70,
                "overall_score": 0.74,
                "success_probability": 0.65,
                "alerts": [
                    {"type": "info", "pillar": "market", "message": "Market growth metrics indicate rapid expansion"}
                ]
            }
        }

